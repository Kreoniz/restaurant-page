(()=>{"use strict";var n={20:(n,e,t)=>{t.d(e,{Z:()=>I});var r=t(537),a=t.n(r),o=t(645),s=t.n(o),i=t(667),d=t.n(i),c=new URL(t(993),t.b),A=new URL(t(658),t.b),l=new URL(t(406),t.b),f=new URL(t(446),t.b),u=new URL(t(163),t.b),p=new URL(t(622),t.b),m=new URL(t(523),t.b),b=s()(a()),g=d()(c),C=d()(A),h=d()(l),v=d()(f),B=d()(u),y=d()(p),w=d()(m);b.push([n.id,`@font-face {\n    font-family: "Raleway";\n    src: url(${g}) format("woff");\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${C}) format("woff");\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${h}) format("woff");\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${v}) format("woff");\n    font-weight: 400;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${B}) format("woff");\n    font-weight: 500;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${y}) format("woff");\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url(${w}) format("woff");\n    font-weight: 700;\n    font-style: normal;\n}\n`,"",{version:3,sources:["webpack://./src/fonts.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,2DAAsD;IACtD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAA4D;IAC5D,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAAwD;IACxD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAAuD;IACvD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAAuD;IACvD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAA6D;IAC7D,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,2DAAqD;IACrD,gBAAgB;IAChB,kBAAkB;AACtB",sourcesContent:['@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-Light.woff") format("woff");\n    font-weight: 300;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-LightItalic.woff") format("woff");\n    font-weight: 300;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-Regular.woff") format("woff");\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-Italic.woff") format("woff");\n    font-weight: 400;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-Medium.woff") format("woff");\n    font-weight: 500;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-MediumItalic.woff") format("woff");\n    font-weight: 500;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: "Raleway";\n    src: url("./assets/Raleway-Bold.woff") format("woff");\n    font-weight: 700;\n    font-style: normal;\n}\n'],sourceRoot:""}]);const I=b},348:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,"img {\n    display: block;\n    width: 100%;\n}\n\n.pasta-image {\n    border: var(--border);\n    border-bottom: none;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n}\n\n.description {\n    padding: 10px;\n\n    border: var(--border);\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n\n    font-style: italic;\n}\n\n.schedule {\n    padding: 1rem;\n    border: var(--border);\n    border-radius: var(--border-radius);\n}\n\n.schedule > *:not(*:last-child, *:first-child) {\n    margin-bottom: min(10px, 1vw);\n}\n\n.schedule-heading {\n    margin-bottom: 10px;\n}\n\n/*\n.location-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.location-content {\n    padding: 10px 10px 0;\n\n    border: var(--border);\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n}\n\n.location-content > * {\n    margin-bottom: 10px;\n}\n*/\n","",{version:3,sources:["webpack://./src/homepage.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,4DAA4D;AAChE;;AAEA;IACI,aAAa;;IAEb,qBAAqB;IACrB,4DAA4D;;IAE5D,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mCAAmC;AACvC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;;;;;;;;;;;;;;CAiBC",sourcesContent:["img {\n    display: block;\n    width: 100%;\n}\n\n.pasta-image {\n    border: var(--border);\n    border-bottom: none;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n}\n\n.description {\n    padding: 10px;\n\n    border: var(--border);\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n\n    font-style: italic;\n}\n\n.schedule {\n    padding: 1rem;\n    border: var(--border);\n    border-radius: var(--border-radius);\n}\n\n.schedule > *:not(*:last-child, *:first-child) {\n    margin-bottom: min(10px, 1vw);\n}\n\n.schedule-heading {\n    margin-bottom: 10px;\n}\n\n/*\n.location-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.location-content {\n    padding: 10px 10px 0;\n\n    border: var(--border);\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n}\n\n.location-content > * {\n    margin-bottom: 10px;\n}\n*/\n"],sourceRoot:""}]);const i=s},83:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,"/*\n.meal-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.meal-info {\n    padding: 10px 10px 0;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    border: var(--border);\n}\n\n.meal-info > * {\n    margin-bottom: 10px;\n}\n*/\n","",{version:3,sources:["webpack://./src/menu.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC",sourcesContent:["/*\n.meal-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.meal-info {\n    padding: 10px 10px 0;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    border: var(--border);\n}\n\n.meal-info > * {\n    margin-bottom: 10px;\n}\n*/\n"],sourceRoot:""}]);const i=s},917:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const i=s},426:(n,e,t)=>{t.d(e,{Z:()=>f});var r=t(537),a=t.n(r),o=t(645),s=t.n(o),i=t(667),d=t.n(i),c=new URL(t(365),t.b),A=s()(a()),l=d()(c);A.push([n.id,`*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n:root {\n    --border: 2px solid black;\n    --border-radius: 20px;\n}\n\nbody {\n    background: url(${l}) 0 0 / 200px;\n}\n\n#content {\n    font-family: "Raleway", sans-serif;\n\n    width: clamp(400px, 60%, 700px);\n    background-color: rgba(255, 255, 255, 0.8);\n    min-height: 100vh;\n\n    padding: 2rem;\n    margin-inline: auto;\n}\n\n.page > * {\n    text-align: center;\n}\n\n.page > *:not(*:last-child) {\n    margin-bottom: 1.5rem;\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: clamp(1.8rem, 5vw, 2rem);\n    font-weight: 700;\n}\n\np {\n    font-size: clamp(1rem, 2.5vw, 1.2rem);\n    font-weight: 500;\n    line-height: 1.25;\n}\n\n.card-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.card-info {\n    padding: 10px 10px 0;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    border: var(--border);\n}\n\n.card-info > * {\n    margin-bottom: 10px;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;IACzB,qBAAqB;AACzB;;AAEA;IACI,+DAA0D;AAC9D;;AAEA;IACI,kCAAkC;;IAElC,+BAA+B;IAC/B,0CAA0C;IAC1C,iBAAiB;;IAEjB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mCAAmC;IACnC,gBAAgB;AACpB;;AAEA;IACI,qCAAqC;IACrC,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,4DAA4D;IAC5D,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,4DAA4D;IAC5D,qBAAqB;AACzB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:['*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n:root {\n    --border: 2px solid black;\n    --border-radius: 20px;\n}\n\nbody {\n    background: url("./assets/pizza_seamless.jpg") 0 0 / 200px;\n}\n\n#content {\n    font-family: "Raleway", sans-serif;\n\n    width: clamp(400px, 60%, 700px);\n    background-color: rgba(255, 255, 255, 0.8);\n    min-height: 100vh;\n\n    padding: 2rem;\n    margin-inline: auto;\n}\n\n.page > * {\n    text-align: center;\n}\n\n.page > *:not(*:last-child) {\n    margin-bottom: 1.5rem;\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: clamp(1.8rem, 5vw, 2rem);\n    font-weight: 700;\n}\n\np {\n    font-size: clamp(1rem, 2.5vw, 1.2rem);\n    font-weight: 500;\n    line-height: 1.25;\n}\n\n.card-image {\n    border-radius: 0 0 var(--border-radius) var(--border-radius);\n    border: var(--border);\n    border-top: none;\n}\n\n.card-info {\n    padding: 10px 10px 0;\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    border: var(--border);\n}\n\n.card-info > * {\n    margin-bottom: 10px;\n}\n'],sourceRoot:""}]);const f=A},593:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,".tabs {\n    display: flex;\n    justify-content: space-between;\n}\n\n.tab {\n    font-size: 1.5rem;\n    font-weight: 500;\n    padding: 20px;\n\n    transition: .5s ease;\n}\n\n.tab:hover {\n    cursor: pointer;\n}\n\n.active-tab {\n    background-color: lightgreen;\n}\n","",{version:3,sources:["webpack://./src/tabs.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,aAAa;;IAEb,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,4BAA4B;AAChC",sourcesContent:[".tabs {\n    display: flex;\n    justify-content: space-between;\n}\n\n.tab {\n    font-size: 1.5rem;\n    font-weight: 500;\n    padding: 20px;\n\n    transition: .5s ease;\n}\n\n.tab:hover {\n    cursor: pointer;\n}\n\n.active-tab {\n    background-color: lightgreen;\n}\n"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);r&&s[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},s=[],i=0;i<n.length;i++){var d=n[i],c=r.base?d[0]+r.base:d[0],A=o[c]||0,l="".concat(c," ").concat(A);o[c]=A+1;var f=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==f)e[f].references++,e[f].updater(u);else{var p=a(u,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:p,references:1})}s.push(l)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var i=t(o[s]);e[i].references--}for(var d=r(n,a),c=0;c<o.length;c++){var A=t(o[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},523:(n,e,t)=>{n.exports=t.p+"6d778d0e2b48fd93d049.woff"},446:(n,e,t)=>{n.exports=t.p+"586ccd027a40c71cde9a.woff"},993:(n,e,t)=>{n.exports=t.p+"dcd4de5d34241ee395ef.woff"},658:(n,e,t)=>{n.exports=t.p+"edc2c9cb646e21ce6d2b.woff"},163:(n,e,t)=>{n.exports=t.p+"02a68fc7ad9a27655bbd.woff"},622:(n,e,t)=>{n.exports=t.p+"e16a38cc2d9deaddc02d.woff"},406:(n,e,t)=>{n.exports=t.p+"d04d347dadec1731ce8b.woff"},365:(n,e,t)=>{n.exports=t.p+"6ed7781c2aad5cfdc8dc.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!n;)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),s=t.n(o),i=t(565),d=t.n(i),c=t(216),A=t.n(c),l=t(589),f=t.n(l),u=t(917),p={};p.styleTagTransform=f(),p.setAttributes=d(),p.insert=s().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=A(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;var m=t(20),b={};b.styleTagTransform=f(),b.setAttributes=d(),b.insert=s().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=A(),e()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;var g=t(426),C={};C.styleTagTransform=f(),C.setAttributes=d(),C.insert=s().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=A(),e()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;var h=t(593),v={};v.styleTagTransform=f(),v.setAttributes=d(),v.insert=s().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=A(),e()(h.Z,v),h.Z&&h.Z.locals&&h.Z.locals;const B=t.p+"60a19984b9b3a601c796.jpg",y=t.p+"7e97878a195a80236f5c.jpg";var w=t(348),I={};function x(n,e,t){const r=document.createElement("div");r.classList.add("card");const a=document.createElement("div");a.classList.add("card-info");const o=document.createElement("h2");o.textContent=n,o.classList.add("card-heading");const s=document.createElement("p");s.textContent=e,s.classList.add("card-description");const i=new Image;return i.src=t,i.classList.add("card-image"),a.appendChild(o),a.appendChild(s),r.appendChild(a),r.appendChild(i),r}function E(){const n=document.querySelector("#page"),e=document.createElement("h1"),t=document.createElement("div"),r=new Image,a=document.createElement("p");e.textContent="La Bella Food",r.src=B,r.classList.add("pasta-image"),a.textContent="Amazing experience! If you thought gourmet kitchen will leave you hungry, think again. You should skip several meals before visiting this amazing restaurant. Everything is so tasty, you cannot restraint yourself from having all of the dishes.",a.classList.add("description"),n.appendChild(e),t.appendChild(r),t.appendChild(a),n.appendChild(t);const o=function(){const n=document.createElement("div"),e=document.createElement("h2");n.classList.add("schedule"),e.textContent="Working Hours",e.classList.add("schedule-heading"),n.appendChild(e);for(let e in k)n.appendChild(R(e,k[e][0],k[e][1]));return n}();n.appendChild(o);const s=x("Location","You can find our restaurants anywhere in Rome!",y);n.appendChild(s)}I.styleTagTransform=f(),I.setAttributes=d(),I.insert=s().bind(null,"head"),I.domAPI=a(),I.insertStyleElement=A(),e()(w.Z,I),w.Z&&w.Z.locals&&w.Z.locals;const k={Monday:["8am","10pm"],Tuesday:["8am","10pm"],Wednesday:["8am","10pm"],Thursday:["8am","10pm"],Friday:["8am","10pm"],Saturday:["9am","11pm"],Sunday:["9am","11pm"]};function R(n,e,t){const r=document.createElement("p");return r.textContent=`${n}: ${e} - ${t}`,r}var q=t(83),D={};D.styleTagTransform=f(),D.setAttributes=d(),D.insert=s().bind(null,"head"),D.domAPI=a(),D.insertStyleElement=A(),e()(q.Z,D),q.Z&&q.Z.locals&&q.Z.locals;const L=t.p+"716a31def476f1abef9a.jpg",Z=t.p+"f3c8fb6f3d765590796f.jpg",T=t.p+"b4d9033c70638c89eac0.jpg",S=document.querySelector("#content"),j=document.createElement("ul");j.classList.add("tabs");const z=document.createElement("li");z.textContent="Home",z.classList.add("tab"),z.dataset.content="homepage";const M=document.createElement("li");M.textContent="Menu",M.classList.add("tab"),M.dataset.content="menu";const U=document.createElement("li");U.textContent="Contact",U.classList.add("tab"),U.dataset.content="contact";const $=[z,M,U],P={homepage:E,menu:function(){const n=document.querySelector("#page");n.appendChild(x("Bruschetta","A very tasty bruschetta",Z)),n.appendChild(x("Margherita","A very tasty pizza",T)),n.appendChild(x("Pasta","A very tasty pasta with cheese",L))},contact:function(){}};$.forEach((n=>{n.addEventListener("click",(e=>{$.forEach((n=>n.classList.remove("active-tab"))),n.classList.add("active-tab");const t=n.dataset.content;document.querySelector("#page").textContent="",P[t]()}))})),j.appendChild(z),j.appendChild(M),j.appendChild(U),S.appendChild(j);const H=document.createElement("div");H.classList.add("page"),H.setAttribute("id","page"),S.appendChild(H),z.classList.add("active-tab"),E()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,